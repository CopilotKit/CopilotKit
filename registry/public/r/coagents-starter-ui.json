{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "coagents-starter-ui",
  "type": "registry:block",
  "title": "Coagents Starter UI",
  "description": "UI for interacting with the a starter coagent.",
  "dependencies": [
    "@copilotkit/react-ui",
    "@copilotkit/react-core"
  ],
  "files": [
    {
      "path": "registry/quickstarts/coagents-starter.tsx",
      "content": "\"use client\";\n\nimport { useCoAgent, useCopilotAction } from \"@copilotkit/react-core\";\nimport { CopilotKitCSSProperties, CopilotSidebar } from \"@copilotkit/react-ui\";\nimport { useState } from \"react\";\n\nexport default function CopilotKitPage() {\n  const [themeColor, setThemeColor] = useState(\"#6366f1\");\n\n  // ü™Å Frontend Actions: https://docs.copilotkit.ai/guides/frontend-actions\n  useCopilotAction({\n    name: \"setThemeColor\",\n    parameters: [{\n      name: \"themeColor\",\n      description: \"The theme color to set. Make sure to pick nice colors.\",\n      required: true, \n    }],\n    handler({ themeColor }) {\n      setThemeColor(themeColor);\n    },\n  });\n\n  return (\n    <main style={{ \"--copilot-kit-primary-color\": themeColor } as CopilotKitCSSProperties}>\n      <YourMainContent themeColor={themeColor} />\n      <CopilotSidebar\n        clickOutsideToClose={false}\n        defaultOpen={true}\n        labels={{\n          title: \"Popup Assistant\",\n          initial: \"üëã Hi, there! You're chatting with an agent. This agent comes with a few tools to get you started.\\n\\nFor example you can try:\\n- **Frontend Tools**: \\\"Set the theme to orange\\\"\\n- **Shared State**: \\\"Write a proverb about AI\\\"\\n- **Generative UI**: \\\"Get the weather in SF\\\"\\n\\nAs you interact with the agent, you'll see the UI update in real-time to reflect the agent's **state**, **tool calls**, and **progress**.\"\n        }}\n      />\n    </main>\n  );\n}\n\n// State of the agent, make sure this aligns with your agent's state.\ntype AgentState = {\n  proverbs: string[];\n}\n\nfunction YourMainContent({ themeColor }: { themeColor: string }) {\n  // ü™Å Shared State: https://docs.copilotkit.ai/coagents/shared-state\n  const {state, setState} = useCoAgent<AgentState>({\n    name: \"sample_agent\",\n    initialState: {\n      proverbs: [\n        \"CopilotKit may be new, but its the best thing since sliced bread.\",\n      ],\n    },\n  })\n\n  // ü™Å Frontend Actions: https://docs.copilotkit.ai/coagents/frontend-actions\n  useCopilotAction({\n    name: \"addProverb\",\n    parameters: [{\n      name: \"proverb\",\n      description: \"The proverb to add. Make it witty, short and concise.\",\n      required: true,\n    }],\n    handler: ({ proverb }) => {\n      setState({\n        ...state,\n        proverbs: [...state.proverbs, proverb],\n      });\n    },\n  });\n\n  //ü™Å Generative UI: https://docs.copilotkit.ai/coagents/generative-ui\n  useCopilotAction({\n    name: \"getWeather\",\n    description: \"Get the weather for a given location.\",\n    available: \"disabled\",\n    parameters: [\n      { name: \"location\", type: \"string\", required: true },\n    ],\n    render: ({ args }) => {\n      return <WeatherCard location={args.location} themeColor={themeColor} />\n    },\n  });\n\n  return (\n    <div\n      style={{ backgroundColor: themeColor }}\n      className=\"h-screen w-screen flex justify-center items-center flex-col transition-colors duration-300\"\n    >\n      <div className=\"bg-white/20 backdrop-blur-md p-8 rounded-2xl shadow-xl max-w-2xl w-full\">\n        <h1 className=\"text-4xl font-bold text-white mb-2 text-center\">Proverbs</h1>\n        <p className=\"text-gray-200 text-center italic mb-6\">This is a demonstrative page, but it could be anything you want! ü™Å</p>\n        <hr className=\"border-white/20 my-6\" />\n        <div className=\"flex flex-col gap-3\">\n          {state.proverbs?.map((proverb, index) => (\n            <div \n              key={index} \n              className=\"bg-white/15 p-4 rounded-xl text-white relative group hover:bg-white/20 transition-all\"\n            >\n              <p className=\"pr-8\">{proverb}</p>\n              <button \n                onClick={() => setState({\n                  ...state,\n                  proverbs: state.proverbs?.filter((_, i) => i !== index),\n                })}\n                className=\"absolute right-3 top-3 opacity-0 group-hover:opacity-100 transition-opacity \n                  bg-red-500 hover:bg-red-600 text-white rounded-full h-6 w-6 flex items-center justify-center\"\n              >\n                ‚úï\n              </button>\n            </div>\n          ))}\n        </div>\n        {state.proverbs?.length === 0 && <p className=\"text-center text-white/80 italic my-8\">\n          No proverbs yet. Ask the assistant to add some!\n        </p>}\n      </div>\n    </div>\n  );\n}\n\n// Simple sun icon for the weather card\nfunction SunIcon() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"w-14 h-14 text-yellow-200\">\n      <circle cx=\"12\" cy=\"12\" r=\"5\" />\n      <path d=\"M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42\" strokeWidth=\"2\" stroke=\"currentColor\" />\n    </svg>\n  );\n}\n\n// Weather card component where the location and themeColor are based on what the agent\n// sets via tool calls.\nfunction WeatherCard({ location, themeColor }: { location?: string, themeColor: string }) {\n  return (\n    <div\n    style={{ backgroundColor: themeColor }}\n    className=\"rounded-xl shadow-xl mt-6 mb-4 max-w-md w-full\"\n  >\n    <div className=\"bg-white/20 p-4 w-full\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h3 className=\"text-xl font-bold text-white capitalize\">{location}</h3>\n          <p className=\"text-white\">Current Weather</p>\n        </div>\n        <SunIcon />\n      </div>\n      \n      <div className=\"mt-4 flex items-end justify-between\">\n        <div className=\"text-3xl font-bold text-white\">70¬∞</div>\n        <div className=\"text-sm text-white\">Clear skies</div>\n      </div>\n      \n      <div className=\"mt-4 pt-4 border-t border-white\">\n        <div className=\"grid grid-cols-3 gap-2 text-center\">\n          <div>\n            <p className=\"text-white text-xs\">Humidity</p>\n            <p className=\"text-white font-medium\">45%</p>\n          </div>\n          <div>\n            <p className=\"text-white text-xs\">Wind</p>\n            <p className=\"text-white font-medium\">5 mph</p>\n          </div>\n          <div>\n            <p className=\"text-white text-xs\">Feels Like</p>\n            <p className=\"text-white font-medium\">72¬∞</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/copilotkit/page.tsx"
    }
  ]
}