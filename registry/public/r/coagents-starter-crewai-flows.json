{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "coagents-starter-crewai-flows",
  "type": "registry:page",
  "title": "Coagents Starter CrewAI Flows",
  "description": "Quickstart for CopilotKit and CrewAI Flows on CrewAI Enterprise.",
  "dependencies": [
    "@copilotkit/react-core",
    "@copilotkit/react-ui"
  ],
  "files": [
    {
      "path": "registry/quickstarts/coagents-starter-crewai-flows/page.tsx",
      "content": "\"use client\";\nimport \"@copilotkit/react-ui/styles.css\";\nimport { CopilotKit, useCopilotAction } from \"@copilotkit/react-core\";\nimport { CopilotChat } from \"@copilotkit/react-ui\";\nimport React, { useState } from \"react\";\n\n// registry/registry/quickstarts/coagents-starter-crewai-flows/page.tsx\n\n// Keep only the env-var reads at module scope\nconst publicApiKey = process.env.NEXT_PUBLIC_COPILOT_API_KEY;\nconst agentName = process.env.NEXT_PUBLIC_COPILOTKIT_AGENT_NAME;\n\nconst CrewAIFlow: React.FC = () => {\n  // Move the missing-env check into the component render\n  if (!publicApiKey || !agentName) {\n    return (\n      <div className=\"h-screen w-full flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h2 className=\"text-xl font-bold mb-2\">Configuration Error</h2>\n          <p>\n            Missing required environment variables: NEXT_PUBLIC_COPILOT_API_KEY\n            and NEXT_PUBLIC_COPILOTKIT_AGENT_NAME\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <CopilotKit publicApiKey={publicApiKey} agent={agentName}>\n      <Chat />\n    </CopilotKit>\n  );\n};\n\nexport default CrewAIFlow;\n\n// Main Chat Component: Handles chat interface and background customization\nconst Chat = () => {\n  const [background, setBackground] = useState(\n    \"linear-gradient(135deg, #667eea 0%, #764ba2 100%)\"\n  );\n\n  // Action: Allow AI to change background color dynamically\n  useCopilotAction({\n    name: \"change_background\",\n    description:\n      \"Change the background color of the chat. Can be anything that the CSS background attribute accepts. Regular colors, linear of radial gradients etc.\",\n    parameters: [\n      {\n        name: \"background\",\n        type: \"string\",\n        description: \"The background. Prefer gradients.\",\n      },\n    ],\n    handler: ({ background }) => setBackground(background),\n    followUp: false,\n  });\n\n  return (\n    <div\n      className=\"h-screen w-full flex items-center justify-center\"\n      style={{ background }}\n    >\n      <div className=\"w-full max-w-3xl h-[80vh] px-4\">\n        <div className=\"h-full bg-white/10 backdrop-blur-lg rounded-2xl shadow-2xl overflow-hidden\">\n          <CopilotChat\n            className=\"h-full\"\n            labels={{\n              initial: \"Hi, I'm an agent. Want to chat?\",\n              placeholder: \"Type a message...\",\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n",
      "type": "registry:page",
      "target": "app/copilotkit/page.tsx"
    }
  ]
}