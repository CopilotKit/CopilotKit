{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "langgraph-platform-starter",
  "type": "registry:block",
  "title": "LangGraph Platform Starter",
  "description": "Bootstrap your Next.js project with CopilotKit and LangGraph Platform.",
  "dependencies": [
    "@copilotkit/runtime",
    "@copilotkit/react-core"
  ],
  "files": [
    {
      "path": "registry/layout/agent-layout.tsx",
      "content": "import \"@copilotkit/react-ui/styles.css\";\nimport React, { ReactNode } from \"react\";\nimport { CopilotKit } from \"@copilotkit/react-core\";\n\n// Where CopilotKit will proxy requests to. If you're using Copilot Cloud, this environment variable will be empty.\nconst runtimeUrl = process.env.NEXT_PUBLIC_COPILOTKIT_RUNTIME_URL\n// When using Copilot Cloud, all we need is the publicApiKey.\nconst publicApiKey = process.env.NEXT_PUBLIC_COPILOT_API_KEY;\n// The name of the agent that we'll be using.\nconst agentName = process.env.NEXT_PUBLIC_COPILOTKIT_AGENT_NAME\n\nexport default function Layout({ children }: { children: ReactNode }) {\n  return (\n    <CopilotKit \n      runtimeUrl={runtimeUrl}\n      publicApiKey={publicApiKey}\n      agent={agentName}\n    >\n      {children}\n    </CopilotKit>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/copilotkit/layout.tsx"
    },
    {
      "path": "registry/runtime/langgraph-platform.ts",
      "content": "import { NextRequest } from \"next/server\";\nimport {\n  CopilotRuntime,\n  copilotRuntimeNextJSAppRouterEndpoint,\n  ExperimentalEmptyAdapter,\n  langGraphPlatformEndpoint,\n} from \"@copilotkit/runtime\";\n\nconst serviceAdapter = new ExperimentalEmptyAdapter();\n\nconst runtime = new CopilotRuntime({\n  remoteEndpoints: [\n    langGraphPlatformEndpoint({\n      deploymentUrl: process.env.LANGGRAPH_DEPLOYMENT_URL || \"\",\n      langsmithApiKey: process.env.LANGSMITH_API_KEY || \"\", // only used in LangGraph Platform deployments\n      agents: [{\n          name: process.env.NEXT_PUBLIC_COPILOTKIT_AGENT_NAME || \"\",\n          description: process.env.NEXT_PUBLIC_COPILOTKIT_AGENT_DESCRIPTION || 'A helpful LLM agent.'\n      }]\n    }),\n  ],\n});\n\nexport const POST = async (req: NextRequest) => {\n  const { handleRequest } = copilotRuntimeNextJSAppRouterEndpoint({\n    runtime,\n    serviceAdapter,\n    endpoint: \"/api/copilotkit\",\n  });\n\n  return handleRequest(req);\n};\n",
      "type": "registry:lib",
      "target": "app/api/copilotkit/route.ts"
    }
  ]
}