FROM public.ecr.aws/docker/library/python:3.12-bookworm
COPY --from=public.ecr.aws/awsguru/aws-lambda-adapter:0.8.4 /lambda-adapter /opt/extensions/lambda-adapter

ARG APP_DIR
ARG WITH_LOCAL_DEPS

ENV POETRY_VIRTUALENVS_CREATE=false

# Install poetry and configure it
RUN pip install poetry==1.7.1 && \
    poetry config virtualenvs.create false

# Copy only poetry files first
COPY ${APP_DIR}/pyproject.toml ./

# Generate a fresh lock file that matches this environment
RUN poetry lock

# Install langgraph-cli with inmem option first to ensure it's available
RUN pip install -U "langgraph-cli[inmem]>=0.1.64"

# Now install all dependencies from pyproject.toml
RUN poetry install --no-interaction --no-ansi

# Copy SDK and install dependencies
COPY sdk-python/ /opt/sdk-python
WORKDIR /asset

# Install local dependencies if needed
RUN if [ "$WITH_LOCAL_DEPS" = "true" ]; then pip install --no-build-isolation /opt/sdk-python; fi

# Copy application code last
COPY ${APP_DIR}/ ./

RUN mkdir .langgraph_api

CMD ["poetry", "run", "demo"]