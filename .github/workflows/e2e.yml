name: End to End Tests

on:
  workflow_dispatch:
    inputs:
      sha:
        description: "sha"
        required: true
      ref:
        description: "ref"
        required: true
      urls:
        description: "urls"
        required: true

jobs:
  e2e_tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: read
      pull-requests: write
      statuses: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Save E2E URLs
        working-directory: examples/e2e
        run: |
          echo "${{ inputs.urls }}" | base64 -d > urls.json

      - name: Print E2E URLs
        working-directory: examples/e2e
        run: |
          cat urls.json

      - name: Create Status Check
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'E2E Tests',
              head_sha: '${{ inputs.sha }}',
              status: 'in_progress',
              started_at: new Date().toISOString()
            })

      # - name: Run Tests
      #   id: run_tests
      #   run: |
      #     cat tests/.env.test
      #     echo "Running E2E tests..."
      #     # Your actual test commands here

      - name: Wait 1 minute
        run: sleep 60
          
      # - name: Update Status Check
      #   if: always()
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       const conclusion = '${{ steps.run_tests.outcome }}' === 'success' ? 'success' : 'failure';
      #       await github.rest.checks.create({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         name: 'E2E Tests',
      #         head_sha: '${{ github.event.client_payload.sha }}',
      #         status: 'completed',
      #         conclusion: conclusion,
      #         completed_at: new Date().toISOString(),
      #         output: {
      #           title: conclusion === 'success' ? 'E2E Tests Passed' : 'E2E Tests Failed',
      #           summary: conclusion === 'success' ? 'All tests passed successfully' : 'Some tests failed'
      #         }
      #       });
      
