name: End to End Tests

on:
  workflow_dispatch:
    inputs:
      sha:
        description: "sha"
        required: true
      ref:
        description: "ref"
        required: true
      urls:
        description: "urls"
        required: true

jobs:
  e2e_tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: read
      pull-requests: write
      statuses: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Save E2E URLs
        working-directory: examples/e2e
        run: |
          echo "${{ inputs.urls }}" | base64 -d > urls.json

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"
      - name: Install Dependencies
        working-directory: ./examples/e2e
        run: |
          pnpm install
          pnpm exec playwright install --with-deps

      - name: Create Status Check
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'E2E Tests',
              head_sha: '${{ inputs.sha }}',
              status: 'in_progress',
              started_at: new Date().toISOString()
            })

      - name: Run Tests
        working-directory: ./examples/e2e
        id: run_tests
        run: pnpm test

      - name: Update Status Check
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const conclusion = '${{ steps.run_tests.outcome }}' === 'success' ? 'success' : 'failure';
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'E2E Tests',
              head_sha: '${{ inputs.sha }}',
              status: 'completed',
              conclusion: conclusion,
              completed_at: new Date().toISOString(),
              output: {
                title: conclusion === 'success' ? 'E2E Tests Passed' : 'E2E Tests Failed',
                summary: conclusion === 'success' ? 'All tests passed successfully' : 'Some tests failed'
              }
            });
