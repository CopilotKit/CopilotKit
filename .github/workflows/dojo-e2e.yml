name: e2e/dojo

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  e2e:
    name: E2E Tests
    runs-on: depot-ubuntu-latest-8

    steps:
    - name: Checkout CPK
      uses: actions/checkout@v4
      with:
        path: CopilotKit

    - name: Checkout AGUI
      uses: actions/checkout@v4
      with:
        repository: ag-ui-protocol/ag-ui
        path: ag-ui
        ref: main

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.13.1

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Install uv
      uses: astral-sh/setup-uv@v6

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ~/.local/share/pnpm/store
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install cpk dependencies
      working-directory: CopilotKit/CopilotKit
      run: pnpm install --frozen-lockfile

    - name: Build cpk
      working-directory: CopilotKit/CopilotKit
      run: |
        unset TURBO_API
        unset TURBO_TOKEN
        unset TURBO_TEAM
        pnpm build

    - name: Install ag-ui dependencies
      working-directory: ag-ui
      run: pnpm install --frozen-lockfile

    - name: Link cpk into ag-ui
      working-directory: CopilotKit
      run: node ../ag-ui/apps/dojo/scripts/link-cpk.js .

    - name: Prepare dojo for e2e
      working-directory: ag-ui/apps/dojo
      run: |
        unset TURBO_API
        unset TURBO_TOKEN
        unset TURBO_TEAM
        node ./scripts/prep-dojo-everything.js

    - name: Install e2e dependencies
      working-directory: ag-ui/apps/dojo/e2e
      run: |
        pnpm install

    - name: write langgraph env files
      working-directory: ag-ui/integrations/langgraph
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGSMITH_API_KEY: ${{ secrets.LANGSMITH_API_KEY }}
      run: |
        echo "OPENAI_API_KEY=${OPENAI_API_KEY}" > python/examples/.env
        echo "LANGSMITH_API_KEY=${LANGSMITH_API_KEY}" >> python/examples/.env
        echo "OPENAI_API_KEY=${OPENAI_API_KEY}" > typescript/examples/.env
        echo "LANGSMITH_API_KEY=${LANGSMITH_API_KEY}" >> typescript/examples/.env

    - name: Run dojo+agents and tests
      uses: JarvusInnovations/background-action@v1
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGSMITH_API_KEY: ${{ secrets.LANGSMITH_API_KEY }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_GEMINI_API_KEY }}
      with:
        run: |
          node ./scripts/run-dojo-everything.js
        working-directory: ag-ui/apps/dojo
        wait-on: |
          http://localhost:9999
          tcp:localhost:8000
          tcp:localhost:8001
          tcp:localhost:8002
          tcp:localhost:8003
          tcp:localhost:8004
          tcp:localhost:8005
          tcp:localhost:8006
          tcp:localhost:8007
          tcp:localhost:8008
          tcp:localhost:8009

    - name: Run tests
      working-directory: ag-ui/apps/dojo/e2e
      env:
        BASE_URL: http://localhost:9999
      run: pnpm test

    - name: Upload traces
      if: always() # Uploads artifacts even if tests fail
      uses: actions/upload-artifact@v4
      with:
        name: playwright-traces
        path: ag-ui/apps/dojo/e2e/test-results/
        retention-days: 7
