name: Preview Environments (Deploy)

on:
  pull_request:
    branches:
      - main

concurrency:
  group: preview-${{ github.event.pull_request.number }}-deploy
  cancel-in-progress: false

jobs:
  build_images:
    runs-on: ubuntu-latest
    name: Dockerize
    strategy:
      matrix:
        app:
          - { project: "coagents-research-canvas", type: "agent", deps: "remote-deps" }
          - { project: "coagents-research-canvas", type: "ui", deps: "remote-deps" }
          # - { project: "coagents-research-canvas", type: "agent", deps: "local-deps" }
          # - { project: "coagents-research-canvas", type: "ui", deps: "local-deps" }
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Configure AWS Profile
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile default
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile default
          aws configure set region us-east-1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: AWS ECR Login
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 058264219587.dkr.ecr.us-east-1.amazonaws.com
        
      - name: (Node) Setup pnpm
        if: matrix.app.type == 'ui'
        uses: pnpm/action-setup@v4
        with:
          version: "9.5"

      - name: (Node) Use Node.js 21
        if: matrix.app.type == 'ui'
        uses: actions/setup-node@v2
        with:
          node-version: 21.x
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-lock.yaml'

      - name: (Node) Install dependencies
        if: matrix.app.type == 'ui'
        working-directory: ./CopilotKit
        run: pnpm install --frozen-lockfile

      - name: (Node) Install app dependencies
        if: matrix.app.type == 'ui'
        working-directory: examples/${{ matrix.app.project }}/${{ matrix.app.type }}
        run: pnpm install --frozen-lockfile

      - name: (Node) Build app
        if: matrix.app.type == 'ui'
        working-directory: examples/${{ matrix.app.project }}/${{ matrix.app.type }}
        run: pnpm run build
        env:
          OPENAI_API_KEY: ${{ steps.doppler.outputs.OPENAI_API_KEY }}

      - name: Build Image
        run: |
          docker buildx build \
            -t 058264219587.dkr.ecr.us-east-1.amazonaws.com/coagents:${{ matrix.app.project }}-${{ matrix.app.type }}-${{ matrix.app.deps }}-${{ github.run_id }} \
            --build-arg APP_DIR=examples/${{ matrix.app.project }}/${{ matrix.app.type }} \
            -f ./examples/Dockerfile.${{ matrix.app.type }}-${{ matrix.app.deps }} \
            --platform=linux/amd64 \
            --provenance=false \
            --push \
            .
        env:
          DOCKER_BUILDKIT: 1

      # - name: Infra install dependencies
      #   working-directory: infra
      #   run: pnpm i

      # - name: Install AWS CDK
      #   run: npm install -g aws-cdk

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-1

      # - name: Configure AWS Profile
      #   run: |
      #     aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile default
      #     aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile default
      #     aws configure set region us-east-1

      # - name: cdk deploy
      #   working-directory: ./infra
      #   run: cdk deploy --profile default --all --require-approval never --outputs-file=cdk_outputs.json --concurrency 10
      #   env:
      #     UNIQUE_ENV_ID: 'PR${{ github.event.number }}'
      #     PROJECT_TYPE: ${{ matrix.app.PROJECT_TYPE }}
      #     PROJECT_NAME: ${{ matrix.app.PROJECT_NAME }}
      #     PROJECT_DESCRIPTION: ${{ matrix.app.PROJECT_DESCRIPTION }}
      #     DEMO_DIR: ${{ matrix.app.DEMO_DIR }}
      #     IMAGE_TAG: '${{ github.run_id }}-${{ github.run_id}}'
      #     OPENAI_API_KEY: ${{ steps.doppler.outputs.OPENAI_API_KEY }}
      #     GITHUB_RUN_ID: "${{ github.run_id }}"

  # cdk_deploy:
  #   runs-on: ubuntu-latest
  #   name: Deploy Preview Environments
  #   needs: build_images
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Setup pnpm
  #       uses: pnpm/action-setup@v4
  #       with:
  #         version: "9.5"

  #     - name: Use Node.js 21
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 21.x
  #         cache: 'pnpm'
  #         cache-dependency-path: '**/pnpm-lock.yaml'

  #     - name: Infra install dependencies
  #       working-directory: infra
  #       run: pnpm i

  #     - name: Install AWS CDK
  #       run: npm install -g aws-cdk

  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1

  #     - name: Configure AWS Profile
  #       run: |
  #         aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile default
  #         aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile default
  #         aws configure set region us-east-1

  #     - name: cdk deploy
  #       working-directory: ./infra
  #       run: cdk deploy --profile default --all --require-approval never --outputs-file=cdk_outputs.json --concurrency 10
  #       env:
  #         UNIQUE_ENV_ID: 'PR${{ github.event.number }}'
  #         OPENAI_API_KEY: ${{ steps.doppler.outputs.OPENAI_API_KEY }}
  #         GITHUB_RUN_ID: "${{ github.run_id }}"
          
      # - name: Generate table from outputs
      #   id: generate-table
      #   working-directory: infra
      #   run: |
      #     node generate-table

      # - name: Assign label
      #   uses: actions/github-script@v4
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       github.issues.addLabels({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         labels: ['preview']
      #       })

      # - name: Comment post-deployment
      #   uses: thollander/actions-comment-pull-request@v3
      #   with:
      #     comment-tag: preview-status-update
      #     file-path: ./infra/preview-comment.md